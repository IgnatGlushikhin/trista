["#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _TintColor;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0 * _TintColor;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat10_0 * vs_COLOR0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n    u_xlat0.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat1.xy = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    u_xlat0.xy = (-u_xlat1.zw) + u_xlat1.xy;\n    vs_TEXCOORD2 = u_xlat0;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_COLOR0 = vec4(0.0, 0.0, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec3 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD1;\nattribute highp vec3 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D unity_Lightmap;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nlowp vec3 u_xlat10_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD0.xy).xyz;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    SV_Target0 = u_xlat10_0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n    SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute mediump vec4 in_COLOR0;\nattribute mediump vec3 in_NORMAL0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying mediump vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat18;\nmediump float u_xlat16_21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_21 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_21 = u_xlat1.x * u_xlat1.x + (-u_xlat16_21);\n    u_xlat16_3.xyz = unity_SHC.xyz * vec3(u_xlat16_21) + u_xlat16_3.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = log2(u_xlat16_3.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat5.xyz = exp2(u_xlat5.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat5.xyz = max(u_xlat5.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD1.xyz = u_xlat5.xyz;\n    vs_TEXCOORD3.xyz = u_xlat1.xyz;\n    u_xlat18 = dot((-u_xlat0.xyz), u_xlat1.xyz);\n    u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat1.xyz = u_xlat1.xyz * (-vec3(u_xlat18)) + (-u_xlat0.xyz);\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _EmissionCoef;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MainAlphaTex;\nuniform lowp samplerCube _ReflectionCube;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying mediump vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nfloat u_xlat2;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nlowp vec3 u_xlat10_10;\nmediump vec2 u_xlat16_16;\nmediump float u_xlat16_17;\nmediump float u_xlat16_24;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_24 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);\n    u_xlat16_24 = inversesqrt(u_xlat16_24);\n    u_xlat16_1.xyz = vec3(u_xlat16_24) * vs_TEXCOORD3.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_1.xyz);\n    u_xlat16_8.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2 = max(u_xlat16_8.x, 0.0);\n    u_xlat16_0.x = (-u_xlat16_0.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat16_0.x = log2(u_xlat16_0.x);\n    u_xlat10_10.xyz = texture2D(_MainAlphaTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.x = (-u_xlat10_10.z) * 4.0 + 6.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_8.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_8.x = u_xlat10_10.y * 0.400000006 + 0.400000006;\n    u_xlat16_8.x = (-u_xlat10_10.z) * 0.300000012 + u_xlat16_8.x;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_8.x + 0.200000003;\n    u_xlat16_0.x = (-u_xlat10_10.y) * 0.200000003 + u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.yz = (-u_xlat16_0.xx) + vec2(1.0, 1.0);\n    u_xlat16_16.xy = u_xlat16_0.zx * u_xlat10_10.yz;\n    u_xlat16_1.xyz = (-u_xlat10_10.yzz) + vec3(1.0, 1.0, 1.85000002);\n    u_xlat16_24 = u_xlat16_1.x * u_xlat16_0.y + u_xlat16_16.y;\n    u_xlat16_1.xy = u_xlat16_0.yx * u_xlat16_1.xy;\n    u_xlat16_8.x = u_xlat10_10.z * 8.0;\n    u_xlat10_3.xyz = textureCubeLodEXT(_ReflectionCube, vs_TEXCOORD4.xyz, u_xlat16_8.x).xyz;\n    u_xlat16_4.xyz = u_xlat16_1.yyy * u_xlat10_3.xyz;\n    u_xlat16_8.x = u_xlat10_10.y + 1.0;\n    u_xlat16_4.xyz = u_xlat16_8.xxx * u_xlat16_4.xyz;\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = u_xlat10_5.xyz * vs_COLOR0.xyz;\n    u_xlat16_7.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_4.xyz = u_xlat16_7.xyz * vec3(u_xlat16_24) + u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat10_3.xyz * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10_10.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_EmissionCoef);\n    u_xlat16_8.xyz = u_xlat16_16.xxx * u_xlat16_7.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_1.zzz + u_xlat16_4.xyz;\n    u_xlat16_17 = (-u_xlat10_10.z) * 1.5 + 1.0;\n    u_xlat16_17 = clamp(u_xlat16_17, 0.0, 1.0);\n    u_xlat16_25 = u_xlat10_10.z * 3.0;\n    u_xlat16_0.x = (-u_xlat16_0.x) * 0.100000001 + u_xlat16_17;\n    u_xlat16_17 = (-u_xlat16_0.x) + u_xlat10_3.x;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_17 * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_0.x * 1.79999995;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.x = u_xlat16_1.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_1.y * u_xlat16_0.x;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vec3(u_xlat16_25) + u_xlat16_8.xyz;\n    u_xlat16_1.xyz = max(vs_TEXCOORD1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.xyz = _LightColor0.xyz * vec3(u_xlat2) + u_xlat16_1.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 unity_AmbientSky;\nuniform \tmediump vec4 unity_AmbientEquator;\nuniform \tmediump vec4 unity_AmbientGround;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nattribute mediump vec3 in_NORMAL0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying mediump vec3 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat16_3.xyz = unity_AmbientSky.xyz + (-unity_AmbientGround.xyz);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlatb12 = u_xlat1.y>=0.0;\n    u_xlat16_3.xyz = (bool(u_xlatb12)) ? u_xlat16_3.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + unity_AmbientGround.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz + (-unity_AmbientEquator.xyz);\n    vs_TEXCOORD1.xyz = abs(u_xlat1.yyy) * u_xlat16_3.xyz + unity_AmbientEquator.xyz;\n    vs_TEXCOORD3.xyz = u_xlat1.xyz;\n    u_xlat12 = dot((-u_xlat0.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat1.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-u_xlat0.xyz);\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _EmissionCoef;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MainAlphaTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nlowp vec3 u_xlat10_2;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec2 u_xlat16_14;\nmediump float u_xlat16_15;\nmediump float u_xlat16_21;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);\n    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD3.xyz;\n    u_xlat16_21 = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat16_21 = inversesqrt(u_xlat16_21);\n    u_xlat16_1.xyz = vec3(u_xlat16_21) * vs_TEXCOORD5.xyz;\n    u_xlat16_0.x = dot(u_xlat16_1.xyz, u_xlat16_0.xyz);\n    u_xlat16_0.x = (-u_xlat16_0.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat16_0.x = log2(u_xlat16_0.x);\n    u_xlat10_2.xyz = texture2D(_MainAlphaTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.x = (-u_xlat10_2.z) * 4.0 + 6.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_7.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_7.x = u_xlat10_2.y * 0.400000006 + 0.400000006;\n    u_xlat16_7.x = (-u_xlat10_2.z) * 0.300000012 + u_xlat16_7.x;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_7.x + 0.200000003;\n    u_xlat16_0.x = (-u_xlat10_2.y) * 0.200000003 + u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.yz = (-u_xlat16_0.xx) + vec2(1.0, 1.0);\n    u_xlat16_14.xy = u_xlat16_0.zx * u_xlat10_2.yz;\n    u_xlat16_1.xyz = (-u_xlat10_2.yzz) + vec3(1.0, 1.0, 1.85000002);\n    u_xlat16_21 = u_xlat16_1.x * u_xlat16_0.y + u_xlat16_14.y;\n    u_xlat16_1.xy = u_xlat16_0.yx * u_xlat16_1.xy;\n    u_xlat16_7.x = u_xlat16_1.y * 0.5;\n    u_xlat16_22 = u_xlat10_2.y + 1.0;\n    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_22;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = u_xlat10_3.xyz * vec3(u_xlat16_21) + u_xlat16_7.xxx;\n    u_xlat16_5.xyz = u_xlat10_3.xyz * vec3(0.5, 0.5, 0.5);\n    u_xlat16_6.xyz = u_xlat10_2.xxx * u_xlat10_3.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_EmissionCoef);\n    u_xlat16_7.xyz = u_xlat16_14.xxx * u_xlat16_5.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_1.zzz + u_xlat16_4.xyz;\n    u_xlat16_15 = (-u_xlat10_2.z) * 1.5 + 1.0;\n    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);\n    u_xlat16_22 = u_xlat10_2.z * 3.0;\n    u_xlat16_0.x = (-u_xlat16_0.x) * 0.100000001 + u_xlat16_15;\n    u_xlat16_15 = (-u_xlat16_0.x) + 0.5;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_15 * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_0.x * 1.79999995;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.x = u_xlat16_1.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_1.y * u_xlat16_0.x;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vec3(u_xlat16_22) + u_xlat16_7.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = max(vs_TEXCOORD1.xyz, vec3(0.0, 0.0, 0.0));\n    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nattribute mediump vec3 in_NORMAL0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying mediump vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat18;\nmediump float u_xlat16_21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_21 = u_xlat1.y * u_xlat1.y;\n    u_xlat16_21 = u_xlat1.x * u_xlat1.x + (-u_xlat16_21);\n    u_xlat16_3.xyz = unity_SHC.xyz * vec3(u_xlat16_21) + u_xlat16_3.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat5.xyz = log2(u_xlat16_3.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat5.xyz = exp2(u_xlat5.xyz);\n    u_xlat5.xyz = u_xlat5.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat5.xyz = max(u_xlat5.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD0.xyz = u_xlat5.xyz;\n    vs_TEXCOORD3.xyz = u_xlat1.xyz;\n    u_xlat18 = dot((-u_xlat0.xyz), u_xlat1.xyz);\n    u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat1.xyz = u_xlat1.xyz * (-vec3(u_xlat18)) + (-u_xlat0.xyz);\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump float _EmissionCoef;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MainAlphaTex;\nuniform lowp samplerCube _ReflectionCube;\nvarying highp vec2 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying mediump vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nfloat u_xlat2;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nlowp vec3 u_xlat10_10;\nmediump vec2 u_xlat16_16;\nmediump float u_xlat16_17;\nmediump float u_xlat16_24;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat16_0.x = dot(vs_TEXCOORD5.xyz, vs_TEXCOORD5.xyz);\n    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_24 = dot(vs_TEXCOORD3.xyz, vs_TEXCOORD3.xyz);\n    u_xlat16_24 = inversesqrt(u_xlat16_24);\n    u_xlat16_1.xyz = vec3(u_xlat16_24) * vs_TEXCOORD3.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz, u_xlat16_1.xyz);\n    u_xlat16_8.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2 = max(u_xlat16_8.x, 0.0);\n    u_xlat16_0.x = (-u_xlat16_0.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);\n    u_xlat16_0.x = log2(u_xlat16_0.x);\n    u_xlat10_10.xyz = texture2D(_MainAlphaTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_8.x = (-u_xlat10_10.z) * 4.0 + 6.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_8.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_8.x = u_xlat10_10.y * 0.400000006 + 0.400000006;\n    u_xlat16_8.x = (-u_xlat10_10.z) * 0.300000012 + u_xlat16_8.x;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_8.x + 0.200000003;\n    u_xlat16_0.x = (-u_xlat10_10.y) * 0.200000003 + u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.yz = (-u_xlat16_0.xx) + vec2(1.0, 1.0);\n    u_xlat16_16.xy = u_xlat16_0.zx * u_xlat10_10.yz;\n    u_xlat16_1.xyz = (-u_xlat10_10.yzz) + vec3(1.0, 1.0, 1.85000002);\n    u_xlat16_24 = u_xlat16_1.x * u_xlat16_0.y + u_xlat16_16.y;\n    u_xlat16_1.xy = u_xlat16_0.yx * u_xlat16_1.xy;\n    u_xlat16_8.x = u_xlat10_10.z * 8.0;\n    u_xlat10_3.xyz = textureCubeLodEXT(_ReflectionCube, vs_TEXCOORD4.xyz, u_xlat16_8.x).xyz;\n    u_xlat16_4.xyz = u_xlat16_1.yyy * u_xlat10_3.xyz;\n    u_xlat16_8.x = u_xlat10_10.y + 1.0;\n    u_xlat16_4.xyz = u_xlat16_8.xxx * u_xlat16_4.xyz;\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_6.xyz = u_xlat10_5.xyz * vs_COLOR0.xyz;\n    u_xlat16_4.xyz = u_xlat16_6.xyz * vec3(u_xlat16_24) + u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat10_3.xyz * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10_10.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(_EmissionCoef);\n    u_xlat16_8.xyz = u_xlat16_16.xxx * u_xlat16_7.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz * u_xlat16_1.zzz + u_xlat16_4.xyz;\n    u_xlat16_17 = (-u_xlat10_10.z) * 1.5 + 1.0;\n    u_xlat16_17 = clamp(u_xlat16_17, 0.0, 1.0);\n    u_xlat16_25 = u_xlat10_10.z * 3.0;\n    u_xlat16_0.x = (-u_xlat16_0.x) * 0.100000001 + u_xlat16_17;\n    u_xlat16_17 = (-u_xlat16_0.x) + u_xlat10_3.x;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_17 * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_0.x * 1.79999995;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_0.x = u_xlat16_1.x * u_xlat16_0.x;\n    u_xlat16_0.x = u_xlat16_1.y * u_xlat16_0.x;\n    u_xlat16_0.xyz = u_xlat16_0.xxx * vec3(u_xlat16_25) + u_xlat16_8.xyz;\n    u_xlat16_1.xyz = max(vs_TEXCOORD0.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.xyz = _LightColor0.xyz * vec3(u_xlat2) + u_xlat16_1.xyz;\n    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"]